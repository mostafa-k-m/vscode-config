[
    {
        "key": "shift+enter",
        "command": "jupyter.execSelectionInteractive",
        "when": "editorTextFocus && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.execSelectionInteractive",
        "when": "editorTextFocus && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+alt+c",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "f11",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "cursorWordAccessibilityRightSelect",
        "when": "accessibilityModeEnabled && textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-cursorWordAccessibilityRightSelect",
        "when": "accessibilityModeEnabled && textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "cursorWordAccessibilityLeftSelect",
        "when": "accessibilityModeEnabled && textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-cursorWordAccessibilityLeftSelect",
        "when": "accessibilityModeEnabled && textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+space right",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+space left",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+space left",
        "command": "footsteps.skipBack"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-footsteps.skipBack"
    },
    {
        "key": "ctrl+shift+space right",
        "command": "footsteps.skipForwards"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-footsteps.skipForwards"
    },
    {
        "key": "alt+enter",
        "command": "r.runSelection",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+enter",
        "command": "-r.runSelection",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "shift+alt+enter",
        "command": "r.runCurrentChunk",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-r.runCurrentChunk",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "shift+alt+enter",
        "command": "r.runSourcewithEcho",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-r.runSourcewithEcho",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+f11",
        "command": "bookmarks.selectLines"
    },
    {
        "key": "ctrl+f11",
        "command": "bookmarks.listFromAllFiles"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "ctrl+shift+delete",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "-editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+enter",
        "command": "jupyter.runcurrentcellandaddbelow",
        "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "alt+enter",
        "command": "-jupyter.runcurrentcellandaddbelow",
        "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "alt+enter",
        "command": "language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'julia' && activeEditor != 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+enter",
        "command": "-language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'julia' && activeEditor != 'workbench.editor.notebook'"
    },
    {
        "key": "alt+enter",
        "command": "language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'juliamarkdown'"
    },
    {
        "key": "ctrl+enter",
        "command": "-language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'juliamarkdown'"
    },
    {
        "key": "f6",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.goToDeclaration",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-lineBreakInsert",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+shift+n",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "-xmlTools.formatAsXml"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "workbench.action.gotoSymbol",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "-workbench.action.gotoSymbol",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "a",
        "command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "b",
        "command": "-notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "interactive.execute",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "ctrl+enter",
        "command": "-interactive.execute",
        "when": "resourceScheme == 'vscode-interactive'"
    },
    {
        "key": "alt+enter",
        "command": "r.runSelection",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+enter",
        "command": "-r.runSelection",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "shift+enter",
        "command": "-interactive.execute",
        "when": "resourceScheme == 'vscode-interactive'"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f1",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    }
]